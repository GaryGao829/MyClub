/**
 * Copyright (c) 2014, 2016, Oracle and/or its affiliates.
 * The Universal Permissive License (UPL), Version 1.0
 */
"use strict";
define(["ojs/ojcore","jquery","ojs/ojeditablevalue","ojs/ojradiocheckbox"],function(a,g){(function(){a.Na("oj.ojCheckboxset",g.oj.editableValue,{version:"1.0.0",defaultElement:"\x3cdiv\x3e",widgetEventPrefix:"oj",options:{disabled:!1,value:void 0},refresh:function(){this._super();this.$a()},widget:function(){return this.HJa},Xf:function(b,c){var e=[],f;this._super(b,c);a.Me.np([{ga:"disabled",Od:!0},{ga:"title"},{ga:"placeholder"},{ga:"required",oh:!0,Od:!0}],c,this);this.og=this.$R();void 0===c.value&&
(f=this.og.filter(":checked"),0<f.length&&(f.each(function(){e.push(g(this).val())}),this.option("value",e,{_context:{Ed:!0,ob:!0}})),void 0===this.options.value&&(this.options.value=[]))},_ComponentCreate:function(){this._super();if(this.element.is("fieldset"))throw Error("ojCheckboxset cannot be bound to a fieldset. Use a div instead.");this.og._ojRadioCheckbox();this.HJa=this.element.addClass("oj-checkboxset oj-component").attr("role","group").wrapInner("\x3cdiv class\x3d'oj-checkboxset-wrapper'\x3e\x3c/div\x3e");
this._on(this.hq);this.$a()},JP:function(){this.og=this.$R();this.og.filter(".oj-checkbox").each(function(){var a=void 0!==g(this).attr("disabled")?!!g(this).prop("disabled"):!1;g(this)._ojRadioCheckbox("option","disabled",a)});this.og.not(".oj-checkbox")._ojRadioCheckbox()},Focus:function(){this.Wf().first().focus();return!0},MP:function(){},$R:function(){var b=this.element.find("input[type\x3dcheckbox]:first");0===b.length&&a.r.warn("Could not find any input type\x3dcheckbox within this element");
b=b.attr("name");return void 0===b?(b=this.element.find("input[type\x3dcheckbox]"),b.not("[name]")):this.element.find("input[type\x3dcheckbox][name\x3d"+b+"]")},ih:function(a,c,e){a=this.element.find("input[type\x3dcheckbox]:tabbable").first();this.jh(c,e,{launcher:a})},_GetMessagingLauncherElement:function(){return this.widget()},$a:function(){this.Rs(this.options.disabled);null!==this.og&&(1===this.og.length?this.element.addClass("oj-checkboxset-single"):this.element.removeClass("oj-checkboxset-single"))},
hq:{change:function(a){this.JG(a)}},JG:function(a){var d;d=this.og;0<d.length&&d.each(function(){this===a.target&&g(this)._ojRadioCheckbox("setSelectedClass",a.target.checked)});d=this.Ag();this.ic(d,a,c)},Ag:function(){return this.Bx()},ul:function(a){var c=this.og.length,e,f,h;for(f=0;f<c;f++){h=g(this.og[f]);e=h[0].value;e=a.indexOf(e);var k=h._ojRadioCheckbox("option","checked");-1!==e?k||h._ojRadioCheckbox("option","checked",!0):k&&h._ojRadioCheckbox("option","checked",!1)}},Bx:function(){var a=
[],c=this.og.filter(":checked");if(0===c.length)return[];c.each(function(){a.push(g(this).val())});return a},_GetDefaultStyleClass:function(){return"oj-checkboxset"},Wf:function(){if(null!=this.og)return this.og;this.$R()},GP:function(){},qB:function(){return!0},Rs:function(a){a=!!a;this.og.each(function(){g(this).data("oj-_ojRadioCheckbox").QB(a)});this.og._ojRadioCheckbox("refreshDisabled")},_setOption:function(a,c,e){this._super(a,c,e);"disabled"===a&&this.Rs(c)},getNodeBySubId:function(a){var c=
this._super(a);return c||(a=a.subId,"oj-checkboxset-inputs"!==a)?c||null:this.og.get()},_destroy:function(){var a=this._super(),c=this.element[0].firstChild;this.og&&this.og._ojRadioCheckbox("destroy");g(c).contents().unwrap();return a}});var c={hw:!1}})();a.Components.Ta("ojCheckboxset","editableValue",{properties:{disabled:{type:"boolean"},value:{type:"Array"}},methods:{destroy:{},refresh:{},widget:{}},extension:{_widgetName:"ojCheckboxset"}});a.Components.register("oj-checkboxset",a.Components.getMetadata("ojCheckboxset"))});